<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>喻家山的野猪</title>
  
  <subtitle>一只在逃野猪</subtitle>
  <link href="https://ssyphus.top/atom.xml" rel="self"/>
  
  <link href="https://ssyphus.top/"/>
  <updated>2021-02-02T18:46:24.922Z</updated>
  <id>https://ssyphus.top/</id>
  
  <author>
    <name>Amos</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>海</title>
    <link href="https://ssyphus.top/2021/02/03/%E6%B5%B7/"/>
    <id>https://ssyphus.top/2021/02/03/%E6%B5%B7/</id>
    <published>2021-02-02T18:40:41.000Z</published>
    <updated>2021-02-02T18:46:24.922Z</updated>
    
    <content type="html"><![CDATA[​<p><p>我为什么要活着。从这个笼统地不能再笼统的切入口，我好像才能</p>]]></content>
    
    
      
      
    <summary type="html">​
&lt;p&gt;
&lt;p&gt;我为什么要活着。从这个笼统地不能再笼统的切入口，我好像才能&lt;/p&gt;
</summary>
      
    
    
    
    
    <category term="一些想法" scheme="https://ssyphus.top/tags/%E4%B8%80%E4%BA%9B%E6%83%B3%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>C++运算符重载</title>
    <link href="https://ssyphus.top/2021/02/02/C-%E8%BF%90%E7%AE%97%E7%AC%A6%E9%87%8D%E8%BD%BD/"/>
    <id>https://ssyphus.top/2021/02/02/C-%E8%BF%90%E7%AE%97%E7%AC%A6%E9%87%8D%E8%BD%BD/</id>
    <published>2021-02-02T07:43:27.000Z</published>
    <updated>2021-02-02T18:46:43.259Z</updated>
    
    <content type="html"><![CDATA[<p>C++中预定义的运算符只能作用于基本的数据类型，而对于用于自定义的数据类型，也需要类似的运算操作。C++提供了运算符重载这一操作赋予已有运算符新的功能。</p><p><strong><em>运算符重载的实质是函数重载</em></strong></p><p>运算符重载同时创建运算符函数实现，与其他函数定义不同的是，运算符重载需要使用关键字operator。</p><h5 id="运算符重载的基本格式为">运算符重载的基本格式为：</h5><p>$ <返回函数类型> operator <运算符符号> (<参数表>){</p><p>​ <函数体></p><p>}</p><p>下面以《算法竞赛入门》中“突击战”一题中的运算符重载为例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Job</span>&#123;</span></span><br><span class="line"><span class="keyword">int</span> j,b;</span><br><span class="line">    <span class="keyword">bool</span> <span class="keyword">operator</span> &lt; (<span class="keyword">const</span> Job&amp; x) <span class="keyword">const</span>&#123; <span class="comment">//const用于保护重载</span></span><br><span class="line"><span class="keyword">return</span> j&gt;x.j;&#125; <span class="comment">//返回函数体</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;
C++中预定义的运算符只能作用于基本的数据类型，而对于用于自定义的数据类型，也需要类似的运算操作。C++提供了运算符重载这一操作赋予已有运算符新的功能。
&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;运算符重载的实质是函数重载&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;</summary>
      
    
    
    
    
    <category term="CSP" scheme="https://ssyphus.top/tags/CSP/"/>
    
  </entry>
  
  <entry>
    <title>突击战</title>
    <link href="https://ssyphus.top/2021/02/02/%E7%AA%81%E5%87%BB%E6%88%98/"/>
    <id>https://ssyphus.top/2021/02/02/%E7%AA%81%E5%87%BB%E6%88%98/</id>
    <published>2021-02-02T06:25:47.000Z</published>
    <updated>2021-02-02T18:47:00.479Z</updated>
    
    <content type="html"><![CDATA[<h4 id="题目描述">题目描述：</h4><blockquote><p>你有n个部下，每个部下需要完成一项任务。第 <span class="math inline">\(i\)</span>个部下需要花$ B_i$ 分钟交代任务，然后他会独立不间断的执行<span class="math inline">\(J_i\)</span> 分钟后完成任务。你需要选择交代任务的顺序，使所有任务能够尽快的完成。不能给两个部下同时交代任务，但部下可以同时执行他们的任务。</p></blockquote><h4 id="分析">分析：</h4><blockquote><p>使用贪心算法</p></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Job</span>&#123;</span></span><br><span class="line"><span class="keyword">int</span> j,b;</span><br><span class="line">    <span class="keyword">bool</span> <span class="keyword">operator</span> &lt; (<span class="keyword">const</span> Job&amp; x) <span class="keyword">const</span>&#123;</span><br><span class="line"><span class="keyword">return</span> j&gt;x.j;&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> n,b,j,kase=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n)==<span class="number">1</span>&amp;&amp;n)&#123;</span><br><span class="line"><span class="built_in">vector</span>&lt;Job&gt; v;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;b,&amp;j);</span><br><span class="line">        v.push_back((Job)&#123;j,b&#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    sort(v.begin(),v.end());</span><br><span class="line">    <span class="keyword">int</span> s=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">s+=v[i].b;</span><br><span class="line">    ans=max(ans,s+v[i]+j);&#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;case %d:%d\n&quot;</span>,kase++,ans);&#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h4 id=&quot;题目描述&quot;&gt;题目描述：&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;你有n个部下，每个部下需要完成一项任务。第 &lt;span class=&quot;math inline&quot;&gt;\(i\)&lt;/span&gt;个部下需要花$ B_i$ 分钟交代任务，然后他会独立不间断的执行&lt;span</summary>
      
    
    
    
    
    <category term="CSP" scheme="https://ssyphus.top/tags/CSP/"/>
    
  </entry>
  
  <entry>
    <title>鹊桥仙</title>
    <link href="https://ssyphus.top/2021/02/01/%E9%B9%8A%E6%A1%A5%E4%BB%99/"/>
    <id>https://ssyphus.top/2021/02/01/%E9%B9%8A%E6%A1%A5%E4%BB%99/</id>
    <published>2021-02-01T15:08:55.000Z</published>
    <updated>2021-02-01T17:36:28.396Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>纤云弄巧，飞星传恨，银汉迢迢暗渡。金风玉露一相逢，便胜却人间无数。</p><p>柔情似水，佳期如梦，忍顾鹊桥归路。两情若是长久时，又岂在朝朝暮暮。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;纤云弄巧，飞星传恨，银汉迢迢暗渡。金风玉露一相逢，便胜却人间无数。&lt;/p&gt;
&lt;p&gt;柔情似水，佳期如梦，忍顾鹊桥归路。两情若是长久时，又岂在朝朝暮暮。&lt;/p&gt;
&lt;/blockquote&gt;
</summary>
      
    
    
    
    
    <category term="诗词歌赋" scheme="https://ssyphus.top/tags/%E8%AF%97%E8%AF%8D%E6%AD%8C%E8%B5%8B/"/>
    
  </entry>
  
  <entry>
    <title>my first post</title>
    <link href="https://ssyphus.top/2021/01/31/my-first-post/"/>
    <id>https://ssyphus.top/2021/01/31/my-first-post/</id>
    <published>2021-01-30T17:10:08.000Z</published>
    <updated>2021-01-30T17:11:42.609Z</updated>
    
    <content type="html"><![CDATA[<h1 id="我的第一篇博客">我的第一篇博客</h1><p><p>现在是凌晨1：11，河南省新郑市，我是Amos，这是我的第一篇博客！！！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;我的第一篇博客&quot;&gt;我的第一篇博客&lt;/h1&gt;
&lt;p&gt;
&lt;p&gt;现在是凌晨1：11，河南省新郑市，我是Amos，这是我的第一篇博客！！！&lt;/p&gt;
</summary>
      
    
    
    
    
  </entry>
  
</feed>
